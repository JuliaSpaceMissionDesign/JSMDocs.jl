var documenterSearchIndex = {"docs":
[{"location":"interfaces/#Errors","page":"Interfaces","title":"Errors","text":"","category":"section"},{"location":"interfaces/","page":"Interfaces","title":"Interfaces","text":"Modules = [JSMDInterfaces.Errors]","category":"page"},{"location":"interfaces/#JSMDInterfaces.Errors.AbstractGenericException","page":"Interfaces","title":"JSMDInterfaces.Errors.AbstractGenericException","text":"AbstractGenericException\n\nA supertype for all ecosystem related errors.\n\n\n\n\n\n","category":"type"},{"location":"interfaces/#JSMDInterfaces.Errors.GenericError","page":"Interfaces","title":"JSMDInterfaces.Errors.GenericError","text":"true\n\nA type representing generic errors.\n\n\n\n\n\n","category":"type"},{"location":"interfaces/#JSMDInterfaces.Errors.NotImplementedError","page":"Interfaces","title":"JSMDInterfaces.Errors.NotImplementedError","text":"true\n\nA type representing not implemented errors.\n\n\n\n\n\n","category":"type"},{"location":"interfaces/#JSMDInterfaces.Errors.@custom_error-Tuple{Any}","page":"Interfaces","title":"JSMDInterfaces.Errors.@custom_error","text":"@custom_error\n\nCreate a type representing a custom error type.\n\n\n\n\n\n","category":"macro"},{"location":"interfaces/#Ephemeris","page":"Interfaces","title":"Ephemeris","text":"","category":"section"},{"location":"interfaces/","page":"Interfaces","title":"Interfaces","text":"Modules = [JSMDInterfaces.Ephemeris]","category":"page"},{"location":"interfaces/#JSMDInterfaces.Ephemeris.AbstractEphemerisProvider","page":"Interfaces","title":"JSMDInterfaces.Ephemeris.AbstractEphemerisProvider","text":"AbstractEphemerisProvider\n\nAbstract type to represent ephemeris types.\n\n\n\n\n\n","category":"type"},{"location":"interfaces/#JSMDInterfaces.Ephemeris.EphemAxesRecord","page":"Interfaces","title":"JSMDInterfaces.Ephemeris.EphemAxesRecord","text":"EphemAxesRecord\n\nStore an orientation record metadata.\n\nFields\n\ntarget – NAIF ID of the target axes.\njd_start – Julian date of the first time.\njd_end – Julian date of the last time.\naxes – NAIF ID of the reference axes.\n\n\n\n\n\n","category":"type"},{"location":"interfaces/#JSMDInterfaces.Ephemeris.EphemPointRecord","page":"Interfaces","title":"JSMDInterfaces.Ephemeris.EphemPointRecord","text":"EphemPointRecord\n\nStore a position record metadata.\n\nFields\n\ntarget – NAIF ID of the target point.\ncenter – NAIF ID of the center point.\njd_start – Julian date of the first time.\njd_end – Julian date of the last time.\naxes – NAIF ID of the reference axes.\n\n\n\n\n\n","category":"type"},{"location":"interfaces/#JSMDInterfaces.Ephemeris.EphemerisError","page":"Interfaces","title":"JSMDInterfaces.Ephemeris.EphemerisError","text":"true\n\nA type representing ephemeris load or computations errors.\n\n\n\n\n\n","category":"type"},{"location":"interfaces/#JSMDInterfaces.Ephemeris.ephem_compute!-Tuple{Any, JSMDInterfaces.Ephemeris.AbstractEphemerisProvider, Number, Number, Int64, Int64, Int64}","page":"Interfaces","title":"JSMDInterfaces.Ephemeris.ephem_compute!","text":"ephem_compute!(res, eph::AbstractEphemerisProvider, jd0::Number, time::Number, \n    target::Int, center::Int, order::Int)\n\nAbstract method to compute position and derivatives up to order of target with  respect to center at the Julian Date jd0 + time.\n\nInputs\n\neph – Ephemeris provider.\njd0, time – jd0 + time must be equal to the Julian Day for the time coordinate    corresponding to the ephemeris. \ntarget – The body or reference point whose coordinates are required. \ncenter – The origin of the coordinate system. \norder – The order of derivatives from 0 (position) to 3 (position, velocity,    acceleration and jerk).\n\n\n\n\n\n","category":"method"},{"location":"interfaces/#JSMDInterfaces.Ephemeris.ephem_orient!-Tuple{Any, JSMDInterfaces.Ephemeris.AbstractEphemerisProvider, Number, Number, Int64, Int64, Int64}","page":"Interfaces","title":"JSMDInterfaces.Ephemeris.ephem_orient!","text":"ephem_orient!(res, eph::AbstractEphemerisProvider, jd0::Number, time::Number, \n    target::Int, order::Int)\n\nAbstract method to compute Euler angles and derivatives up to order for the orientation of  the target axes at epoch jd0 + time.\n\nInputs\n\neph – Ephemeris provider.\njd0, time – jd0 + time must be equal to the Julian Day for the time coordinate    corresponding to the ephemeris. \ntarget – The axes whose orientation is required.\ncenter – The parent set of axes\norder – The order of derivatives from 0 (angles) to 3 (angles, angles rate, etc...).\n\n\n\n\n\n","category":"method"},{"location":"interfaces/#JSMDInterfaces.FilesIO.load-Tuple{Type{<:JSMDInterfaces.Ephemeris.AbstractEphemerisProvider}, Any}","page":"Interfaces","title":"JSMDInterfaces.FilesIO.load","text":"load(::Type{<:AbstractEphemerisProvider}, files)\n\nLoad ephemeris files.\n\n\n\n\n\n","category":"method"},{"location":"interfaces/#Math","page":"Interfaces","title":"Math","text":"","category":"section"},{"location":"interfaces/","page":"Interfaces","title":"Interfaces","text":"Modules = [JSMDInterfaces.Math]\n","category":"page"},{"location":"interfaces/#JSMDInterfaces.Math.AbstractInterpolationMethod","page":"Interfaces","title":"JSMDInterfaces.Math.AbstractInterpolationMethod","text":"AbstractInterpolationMethod\n\nAbstract type representing any interpolation method.\n\n\n\n\n\n","category":"type"},{"location":"interfaces/#JSMDInterfaces.Math.interpolate-Tuple{JSMDInterfaces.Math.AbstractInterpolationMethod, Any}","page":"Interfaces","title":"JSMDInterfaces.Math.interpolate","text":"interpolate(::AbstractInterpolationMethod, x)\n\nAbstract interpolator call method.\n\n\n\n\n\n","category":"method"},{"location":"interfaces/#FilesIO","page":"Interfaces","title":"FilesIO","text":"","category":"section"},{"location":"interfaces/","page":"Interfaces","title":"Interfaces","text":"Modules = [JSMDInterfaces.FilesIO]","category":"page"},{"location":"interfaces/#JSMDInterfaces.FilesIO.filepath","page":"Interfaces","title":"JSMDInterfaces.FilesIO.filepath","text":"filepath(files::AbstractFile, idx::Int=1)\n\nReturn the path of the idx-th file within files. \n\n\n\n\n\n","category":"function"},{"location":"interfaces/#JSMDInterfaces.FilesIO.filepaths-Tuple{JSMDInterfaces.FilesIO.AbstractFile}","page":"Interfaces","title":"JSMDInterfaces.FilesIO.filepaths","text":"filepaths(files::AbstractFile)\n\nReturn the path of all the files loaded within file.\n\n\n\n\n\n","category":"method"},{"location":"interfaces/#JSMDInterfaces.FilesIO.load-Tuple{JSMDInterfaces.FilesIO.AbstractFile}","page":"Interfaces","title":"JSMDInterfaces.FilesIO.load","text":"load(files::T) where T <: AbstractFile\n\nGeneric loader of different file/s formats.\n\n\n\n\n\n","category":"method"},{"location":"interfaces/#JSMDInterfaces.FilesIO.@filetype-Tuple{Any, Any}","page":"Interfaces","title":"JSMDInterfaces.FilesIO.@filetype","text":"filetype(ftype, suptype)\n\nCreate a type representing a specific file and the associated  filepaths and filepath implementations.\n\n\n\n\n\n","category":"macro"},{"location":"#JSMDInterfaces.jl","page":"Home","title":"JSMDInterfaces.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"An interface package for the JSMD ecosystem","category":"page"},{"location":"","page":"Home","title":"Home","text":"SMDInterfacesUtils.jl handles all the interface definitions for the JSMD ecosystem. It is a low-level and low dependency library made to be  depended on by the higher-level libraries to supply a common interface.","category":"page"}]
}
